#
# CSE183 Assignment 9
# Referenced https://swagger.io/docs/specification/describing-parameters/ for queries

openapi: '3.0.3'

info:
  description: CSE183 Assignment 9 Backend
  version: 0.1.0
  title: CSE183 Assignment 9 Backend

servers:
  - url: http://localhost:3010

paths:
  /auth:
    post:
      description: Authenticate user
      requestBody:
        description: user to authenticate
        required: true
        content:
          application/json:
            schema:
              type: object
              $ref: '#/components/schemas/LoginInfo'
      responses:
        200:
          description: Application response
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/AuthenticatedUser'
        401:
          description: Invalid username or password


  /v0/mail:
    get:
      description: Returns all Emails
      parameters:
        - in: query
          name: mailbox
          description: Name of mailbox
          schema:
            pattern: '^[a-z0-9]+$' # https://stackoverflow.com/a/46243207/14503257
            type: string
        - in: query
          name: from
          description: Name of person
          schema:
            type: string
            minLength: 2
        - in: query
          name: search
          description: Search for in mailbox
          schema:
            type: string
        - in: query
          name: searchOn
          description: Search is on
          schema:
            type: boolean
      responses:
        200:
          description: Email Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MailResponse'
        404:
          description: Mailbox not found
        400:
          description: Invalid email format or from query too short
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    post:
      description: Creates a new email
      requestBody:
        description: Email to add
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostMail'
      responses:
        201:
          description: Return newly created email
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutboundMail'
        400:
          description: Unexpected properties
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /v0/emails:
    get:
      description: Returns an email by id
      responses:
        200:
          description: Return all emails
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /v0/mailboxes:
    get:
      description: Returns all mailbox names
      responses:
        200:
          description: Return all mailbox names
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    mailbox:
                      type: string
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      description: Added mailbox
      requestBody:
        description: Mailbox to add
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Mailbox'
      responses:
        201:
          description: Successfully added mailbox
        400:
          description: Unexpected properties
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /v0/drafts:
    post:
      description: Creates a new email
      requestBody:
        description: Email to add
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostMail'
      responses:
        201:
          description: Return newly created email
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutboundMail'
        400:
          description: Unexpected properties
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v0/user:
    get:
      description: Gets info on user
      responses:
        200:
          description: Return all user info
          content:
            application/json:
              schema:
                type: array
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      description: Updates user
      requestBody:
        description: Userinfo
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        201:
          description: Successfully updated user
        400:
          description: Unexpected properties
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        
  /v0/mail/{id}:
    get:
      description: Returns an email by id
      parameters:
      - name: id
        in: path
        description: ID of the email
        required: true
        schema:
          format: uuid # https://swagger.io/specification/
          type: string
      responses:
        200:
          description: Email found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mail'
        400:
          description: Invalid ID
        404:
          description: Email not found
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      description: Moves email to different/new inbox
      parameters:
      - name: id
        in: path
        description: ID of the email
        required: true
        schema:
          format: uuid # https://swagger.io/specification/
          type: string
      - in: query
        name: mailbox
        description: Name of mailbox
        schema:
          pattern: '^[a-z0-9]+$' # https://stackoverflow.com/a/46243207/14503257
          type: string
      - in: query
        name: starred
        description: Update starred
        schema:
          type: boolean
      - in: query
        name: unread
        description: Update unread
        schema:
          type: boolean
      responses:
        204:
          description: Moved email
        409:
          description: Named mailbox is sent and mail identified by id is not already in sent mailbox
        404:
          description: Email not found
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      description: Delete email
      parameters:
      - name: id
        in: path
        description: ID of the email
        required: true
        schema:
          format: uuid # https://swagger.io/specification/
          type: string
      responses:
        204:
          description: Deleted email
        404:
          description: Email not found
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /v0/unread:
    get:
      description: Returns number of unread emails
      responses:
        200:
          description: Unread Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UnreadResponse'
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    Error:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    
    LoginInfo:
      type: object
      properties: 
        email:
          type: string
        password:
          type: string

    AuthenticatedUser:
      type: object
      properties: 
        name:
          type: string
        url:
          type: string
        accessToken:
          type: string

    MailResponse:
      additionalProperties: false # https://swagger.io/docs/specification/data-models/data-types/#additionalProperties
      type: object
      properties:
        name:
          type: string
        mail: 
          type: array
          items:
            $ref: '#/components/schemas/Mail'

    Mail:
      type: object
      properties:
        id:
          type: string
        to:
          $ref: '#/components/schemas/EmailBody'
        subject:
          type: string
        received:
          type: string
        sent:
          type: string
        content:
          type: string
        from:
          $ref: '#/components/schemas/EmailBody'
        unread:
          type: boolean
        starred:
          type: boolean
        avatar:
          type: string
      required:
        - id
        - to
        - subject
        - received
        - from
        - sent

    OutboundMail:
      type: object
      properties:
        mailbox:
          type: string
        mail:
          type: object
          properties:
            to:
              $ref: '#/components/schemas/EmailBody'
            subject:
              type: string
            received:
              type: string
            sent:
              type: string
            content:
              type: string
            from:
              $ref: '#/components/schemas/EmailBody'
          required:
            - to
            - subject
            - received
            - content
            - from
            - sent

    PostMail:
      additionalProperties: false # https://swagger.io/docs/specification/data-models/data-types/#additionalProperties
      type: object
      properties:
        to:
          $ref: '#/components/schemas/EmailBody'
        subject:
          type: string
        content:
          type: string
      required:
        - to
        - subject
        - content

    Mailbox:
      additionalProperties: false # https://swagger.io/docs/specification/data-models/data-types/#additionalProperties
      type: object
      properties:
        mailbox:
          type: string
      required:
        - mailbox
    
    EmailBody:
      additionalProperties: false # https://swagger.io/docs/specification/data-models/data-types/#additionalProperties
      type: object
      properties:
        name:
          type: string
        email:
          type: string
          format: email
      required:
        - name
        - email

    User:
      additionalProperties: false # https://swagger.io/docs/specification/data-models/data-types/#additionalProperties
      type: object
      properties:
        username:
          type: string
        avatar:
          type: string
        showavatar:
          type: boolean
        email:
          type: string
          format: email
      required:
        - username
        - avatar
        - showavatar
        - email
    
    UnreadResponse:
      additionalProperties: false # https://swagger.io/docs/specification/data-models/data-types/#additionalProperties
      type: object
      properties:
        mailbox:
          type: string
        count: 
          type: string